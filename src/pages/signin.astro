---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/PageLayout.astro";
import SigninComponent from "@/components/portfolio/firebase-auth/Signin.component";
import ContainerSection from "@/components/common/ContainerSection.astro";

/* Check if the user is authenticated */
const auth = getAuth(app);
const sessionCookie = Astro.cookies.get("__session");
if (sessionCookie) {
	const decodedCookie = await auth.verifySessionCookie(sessionCookie.value);
	if (decodedCookie) {
		return Astro.redirect("/dashboard/");
	}
}
---

<Layout meta={{ title: "Signin" }}>
	<ContainerSection>
		<SigninComponent client:visible />
	</ContainerSection>
</Layout>
<script>
	import {
		getAuth,
		inMemoryPersistence,
		signInWithEmailAndPassword,
		signInWithPopup,
		GoogleAuthProvider,
		GithubAuthProvider,
		type AuthProvider,
	} from "firebase/auth";
	import { app } from "../firebase/client";

	const auth = getAuth(app);
	const googleProvider = new GoogleAuthProvider();
	const githubProvider = new GithubAuthProvider();
	auth.setPersistence(inMemoryPersistence);

	const handleSignInWithPopup = async (provider: AuthProvider) => {
		try {
			const result = await signInWithPopup(auth, provider);
			const user = result.user;
			const idToken = await user.getIdToken();
			const response = await fetch("/api/auth/third-party-signin", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({ idToken }),
			});

			if (response.redirected) {
				window.location.assign(response.url);
			}
		} catch (error) {
			console.error(`Error signing in with ${provider.providerId.split(".")[0]}:`, error);
		}
	};

	document
		.getElementById("github-signin-button")
		?.addEventListener("click", () => handleSignInWithPopup(githubProvider));
	document
		.getElementById("google-signin-button")
		?.addEventListener("click", () => handleSignInWithPopup(googleProvider));

	document.getElementById("login-form")?.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(document.getElementById("login-form") as HTMLFormElement);
		const email = formData.get("email")?.toString();
		const password = formData.get("password")?.toString();

		if (!email || !password) {
			return;
		}

		try {
			const userCredential = await signInWithEmailAndPassword(auth, email, password);
			const idToken = await userCredential.user.getIdToken();

			const body = new URLSearchParams();
			body.append("idToken", idToken);

			const response = await fetch("/api/auth/signin", {
				method: "POST",
				headers: {
					"Content-Type": "application/x-www-form-urlencoded",
				},
				body: body.toString(),
			});

			if (response.redirected) {
				window.location.assign(response.url);
			} else {
				console.error("Response not redirected:", await response.text());
			}
		} catch (error) {
			console.error("Error signing in with email and password:", error);
		}
	});
</script>
