---
import { Icon } from "astro-icon/components";
import { menuLinks } from "@/site.config";
import SocialList from "./SocialList.astro";

const url = new URL(Astro.request.url);
---

<header class="group absolute top-0
z-50 flex w-full" id="main-header">
  <div class="mx-auto flex
	w-full max-w-7xl items-center
	justify-between p-3 md:px-6">
    <SocialList />
    <div class="flex items-center">
      <div class="flex sm:flex-col">
        <nav
          aria-label="Main navigation"
          class="text-accent
					absolute
					inset-x-2
					top-24
				  hidden
				  flex-col
				  group-[.menu-open]:z-50
				  group-[.menu-open]:flex
				  sm:static
				  sm:mt-1
				  sm:flex
      
				  sm:flex-row"
          id="navigation-menu"
        >
          <ul
            class="flex w-full flex-col gap-2 rounded-lg border bg-bgcolor px-4 py-4 font-medium sm:flex-row sm:border-none sm:bg-transparent md:w-auto"
          >
            {
              menuLinks.map(({ title, path, subLinks }) => (
                <li class={subLinks ? "dropdown" : "px-3 py-1"}>
                  {subLinks ? (
                    <>
                      <a class="btn-nav-link text-accent flex items-center px-3 py-1 ">
                        {title}
                        <Icon
                          name="tabler:chevron-down"
                          class="icon-chevron ml-0.5 hidden h-3.5 w-3.5 transition-transform duration-500 ease-in-out sm:visible md:inline"
                        />
                      </a>
                      <ul class="dropdown-menu m-0 rounded-lg bg-bgcolor py-0 font-medium sm:hidden sm:border sm:py-4 md:absolute md:min-w-[200px]">
                        {subLinks.map(({ title, path }) => (
                          <li>
                            <a
                              class={
                                "whitespace-no-wrap block px-6 py-2 first:rounded-t dark:hover:text-white"
                              }
                              href={path}
                            >
                              {title}
                            </a>
                          </li>
                        ))}
                      </ul>
                    </>
                  ) : (
                    <a
                      class:list={[
                        "items-centers flex dark:hover:text-white",
                        { "aw-link-active": path === url.pathname },
                      ]}
                      href={path}
                    >
                      {title}
                    </a>
                  )}
                </li>
              ))
            }
          </ul>
        </nav>
      </div>

      <mobile-button>
        <button
          aria-expanded="false"
          aria-controls="menu"
          aria-label="Toggle menu"
          class="group relative h-8 w-8 sm:invisible sm:hidden"
          id="toggle-navigation-menu"
          type="button"
        >
          <Icon
            name="nav-line"
            class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
          />
          <Icon
            name="nav-cross"
            class="text-accent absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
          />
        </button>
      </mobile-button>
    </div>
  </div>
</header>

<script>
  import { toggleClass } from "@/utils/index";

  class MobileNavBtn extends HTMLElement {
    private headerEl: HTMLElement;
    private menuOpen: boolean;
    private mobileButtonEl: HTMLButtonElement;

    toggleMobileMenu = () => {
      toggleClass(this.headerEl, "menu-open");
      this.menuOpen = !this.menuOpen;
      this.mobileButtonEl.setAttribute("aria-expanded", this.menuOpen.toString());
    };

    constructor() {
      super();
      this.headerEl = document.getElementById("main-header")!;
      this.mobileButtonEl = this.querySelector("button") as HTMLButtonElement;
      this.menuOpen = false;

      this.mobileButtonEl.addEventListener("click", this.toggleMobileMenu);
    }
  }

  customElements.define("mobile-button", MobileNavBtn);
</script>
